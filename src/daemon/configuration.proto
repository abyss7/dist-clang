import "base/base.proto";

package dist_clang.daemon.proto;

message Host {
  required string host          = 1;
  optional uint32 port          = 2 [ default = 6000 ];
  optional uint32 threads       = 3 [ default = 2 ];
  optional bool disabled        = 4 [ default = false ];
  optional bool ipv6            = 5 [ default = false ];
}

message Verbosity {
  message Range {
    required uint32 right = 1;

    optional uint32 left  = 2;
    // if omitted: [ default = right ];
  }

  optional uint32 error_mark = 1 [ default = 20 ];
  // level â‰¤ |error_mark| goes to stderr.

  repeated Range levels      = 2;
  // all ranges are inclusive: [left, right].
}

message Configuration {
  message Cache {
    required string path         = 1;

    optional uint64 size         = 2 [ default = 0 ];
    // 0 - is unlimited

    optional bool direct         = 4 [ default = false ];

    optional bool mtime          = 5 [ default = false ];
    // TODO: not implemented yet.

    optional bool disabled       = 6 [ default = false ];
    optional bool snappy         = 7 [ default = true ];

    optional uint32 threads      = 8;
    // |std::thread::hardware_concurrency()| is default.

    optional uint32 clean_period = 9 [ default = 600 ];
    // in seconds.

    optional bool store_index    = 10 [ default = false ];
  }

  message Emitter {
    required string socket_path = 1;
    repeated Host remotes       = 2;
    optional uint32 threads     = 3 [ default = 2 ];
    optional bool only_failed   = 4 [ default = false ];
  }

  message Absorber {
    required Host local                 = 1;
    optional uint32 min_emitter_version = 2 [ default = 100 ];
  }

  message Collector {
    required Host local = 1;
  }

  // FIXME: use new protobuf feature "anyof" for emitter and absorber.
  optional Emitter emitter      = 1;
  optional Absorber absorber    = 2;

  optional Collector collector  = 3;

  optional uint32 pool_capacity = 4  [ default = 16 ];
  // 0 - is unlimited.

  repeated base.proto.Compiler versions = 5;
  optional Verbosity verbosity  = 6;
  optional uint32 user_id       = 7;

  optional string config_path   = 8;
  // allows reloading of config changes.

  optional Cache cache          = 9;

  optional uint32 read_timeout  = 10 [ default = 60 ];
  // in seconds.

  optional uint32 send_timeout  = 11 [ default = 5  ];
  // in seconds.

  optional uint32 read_minimum  = 12 [ default = 32 ];
  // in bytes.
}
