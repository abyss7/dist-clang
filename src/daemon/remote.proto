import "base/base.proto";
import "net/universal.proto";

package dist_clang.daemon.proto;

// Sent from emitter to absorber.
message Remote {
  optional base.proto.Flags flags    = 1;
  optional string source             = 2;
  optional string sanitize_blacklist = 3;
  // FIXME: replace with map after protobuf upgrade

  optional string handled_hash       = 4;
  // Hash of preprocessed source for simple cache.

  extend net.proto.Universal {
    optional Remote extension = 6;
  }
}

// Sent from absorber to emitter.
message Result {
  required bytes obj  = 1;
  // Doesn't comply with file cache manifest: it's an |optional| in manifest.

  optional bytes deps = 2;

  optional bool from_cache = 3 [ default = false ];
  // Set to true if obj was restored from cache, false otherwise.

  optional bool hash_match = 4;
  // Set to true if hash sent by emitter doesn't match the one,
  // calculated on absorber.

  extend net.proto.Universal {
    optional Result extension = 4;
  }
}
