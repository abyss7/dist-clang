import("//build/template/protobuf.gni")

source_set("assert") {
  visibility = []
  visibility = [ ":base" ]
  sources = [
    "assert.h",
    "assert_linux.cc",
    "assert_mac.cc",
    "assert_win.cc",
  ]

  deps += [ ":logging" ]
}

shared_library("base") {
  sources = [
    "aliases.h",
    "attributes.h",
    "c_utils.h",
    "c_utils_forward.h",
    "c_utils_posix.h",
    "c_utils_win.h",
    "const_string.cc",
    "const_string.h",
    "constants.cc",
    "constants.h",
    "empty_lambda.h",
    "file/data.cc",
    "file/data.h",
    "file/epoll_linux.cc",
    "file/epoll_linux.h",
    "file/file.cc",
    "file/file.h",
    "file/file_posix.cc",
    "file/handle_posix.cc",
    "file/handle_posix.h",
    "file/handle_win.cc",
    "file/handle_win.h",
    "file/kqueue_mac.cc",
    "file/kqueue_mac.h",
    "file/pipe.h",
    "file/pipe_linux.cc",
    "file/pipe_mac.cc",
    "file_utils.h",
    "file_utils.cc",
    "future.h",
    "locked_list.h",
    "locked_queue.h",
    "locked_queue_index.h",
    "process.cc",
    "process.h",
    "process_forward.h",
    "process_impl.cc",
    "process_impl.h",
    "process_impl_linux.cc",
    "process_impl_mac.cc",
    "protobuf_utils.cc",
    "protobuf_utils.h",
    "queue_aggregator.h",
    "singleton.h",
    "stl_include.h",
    "string_utils.h",
    "temporary_dir.h",
    "temporary_dir_posix.cc",
    "testable.h",
    "thread.h",
    "thread_fixed.h",
    "thread_pool.cc",
    "thread_pool.h",
    "worker_pool.cc",
    "worker_pool.h",
  ]

  public = [
    "aliases.h",
    "attributes.h",
    "c_utils.h",
    "const_string.h",
    "constants.h",
    "empty_lambda.h",
    "file/data.h",
    "file/epoll_linux.h",
    "file/file.h",
    "file/handle_posix.h",
    "file/handle_win.h",
    "file/kqueue_mac.h",
    "file/pipe.h",
    "file_utils.h",
    "future.h",
    "locked_list.h",
    "locked_queue.h",
    "process.h",
    "process_forward.h",
    "process_impl.h",
    "protobuf_utils.h",
    "queue_aggregator.h",
    "singleton.h",
    "string_utils.h",
    "temporary_dir.h",
    "testable.h",
    "thread.h",
    "thread_fixed.h",
    "thread_pool.h",
    "worker_pool.h",
  ]

  public_deps = [
    ":assert",
    ":base_proto",
    ":logging",
  ]

  allow_circular_includes_from = [
    ":assert",
    ":logging",
  ]
}

shared_library("logging") {
  # TODO: upstream ability to change logging facility for gtest.
  visibility += [ "//src/third_party/gtest:gtest" ]

  sources = [
    "logging.cc",
    "logging.h",
    "using_log.h",
  ]
}

protobuf("base_proto") {
  shared = true

  visibility = [
    "//src/client:config_proto",
    "//src/daemon:config_proto",
  ]

  deps = [
    "//src/net:net_proto",
  ]
  sources = [
    "base.proto",
  ]
}
