config("includes") {
  include_dirs = [ "exported/include" ]
}

config("flags") {
  defines = [
    "LEVELDB_ATOMIC_PRESENT",
    "LEVELDB_PLATFORM_POSIX",
    "SNAPPY",
  ]

  cflags = [
    "-fno-builtin-memcmp",
    "-Wno-deprecated-declarations",  # MacOS X 10.12
    "-Wno-sign-compare",
  ]
}

# Need a separate target for tests
source_set("private_headers") {
  public = [
    "exported/db/db_impl.h",
    "exported/db/dbformat.h",
    "exported/db/filename.h",
    "exported/db/log_format.h",
    "exported/db/log_reader.h",
    "exported/db/log_writer.h",
    "exported/db/memtable.h",
    "exported/db/skiplist.h",
    "exported/db/version_edit.h",
    "exported/db/version_set.h",
    "exported/db/write_batch_internal.h",
    "exported/helpers/memenv/memenv.h",
    "exported/port/port.h",
    "exported/table/block.h",
    "exported/table/block_builder.h",
    "exported/table/filter_block.h",
    "exported/table/format.h",
    "exported/util/arena.h",
    "exported/util/coding.h",
    "exported/util/crc32c.h",
    "exported/util/hash.h",
    "exported/util/logging.h",
    "exported/util/mutexlock.h",
    "exported/util/random.h",
  ]
}

static_library("leveldb") {
  visibility += [ "//src/cache:file_cache" ]

  sources = [
    "exported/db/builder.cc",
    "exported/db/builder.h",
    "exported/db/db_impl.cc",
    "exported/db/db_iter.cc",
    "exported/db/db_iter.h",
    "exported/db/dbformat.cc",
    "exported/db/filename.cc",
    "exported/db/log_reader.cc",
    "exported/db/log_writer.cc",
    "exported/db/memtable.cc",
    "exported/db/repair.cc",
    "exported/db/snapshot.h",
    "exported/db/table_cache.cc",
    "exported/db/table_cache.h",
    "exported/db/version_edit.cc",
    "exported/db/version_set.cc",
    "exported/db/write_batch.cc",
    "exported/helpers/memenv/memenv.cc",
    "exported/include/leveldb/cache.h",
    "exported/include/leveldb/comparator.h",
    "exported/include/leveldb/db.h",
    "exported/include/leveldb/env.h",
    "exported/include/leveldb/filter_policy.h",
    "exported/include/leveldb/iterator.h",
    "exported/include/leveldb/options.h",
    "exported/include/leveldb/slice.h",
    "exported/include/leveldb/status.h",
    "exported/include/leveldb/table.h",
    "exported/include/leveldb/table_builder.h",
    "exported/include/leveldb/write_batch.h",
    "exported/port/port_example.h",
    "exported/port/port_posix.cc",
    "exported/port/port_posix.h",
    "exported/table/block.cc",
    "exported/table/block_builder.cc",
    "exported/table/filter_block.cc",
    "exported/table/format.cc",
    "exported/table/iterator.cc",
    "exported/table/iterator_wrapper.h",
    "exported/table/merger.cc",
    "exported/table/merger.h",
    "exported/table/table.cc",
    "exported/table/table_builder.cc",
    "exported/table/two_level_iterator.cc",
    "exported/table/two_level_iterator.h",
    "exported/util/arena.cc",
    "exported/util/bloom.cc",
    "exported/util/cache.cc",
    "exported/util/coding.cc",
    "exported/util/comparator.cc",
    "exported/util/crc32c.cc",
    "exported/util/env.cc",
    "exported/util/env_posix.cc",
    "exported/util/filter_policy.cc",
    "exported/util/hash.cc",
    "exported/util/histogram.cc",
    "exported/util/histogram.h",
    "exported/util/logging.cc",
    "exported/util/options.cc",
    "exported/util/status.cc",
  ]

  public = [
    "exported/include/leveldb/cache.h",
    "exported/include/leveldb/comparator.h",
    "exported/include/leveldb/db.h",
    "exported/include/leveldb/env.h",
    "exported/include/leveldb/filter_policy.h",
    "exported/include/leveldb/iterator.h",
    "exported/include/leveldb/options.h",
    "exported/include/leveldb/slice.h",
    "exported/include/leveldb/status.h",
    "exported/include/leveldb/table.h",
    "exported/include/leveldb/table_builder.h",
    "exported/include/leveldb/write_batch.h",
  ]

  include_dirs = [ "exported" ]

  configs += [ ":flags" ]

  public_configs = [ ":includes" ]

  deps += [
    ":private_headers",
    "//src/third_party/snappy:snappy",
  ]
}

source_set("leveldb_test_utils") {
  testonly = true

  sources = [
    "exported/util/testharness.cc",
    "exported/util/testharness.h",
    "exported/util/testutil.cc",
    "exported/util/testutil.h",
  ]

  include_dirs = [ "exported" ]

  configs += [
    ":flags",
    ":includes",
  ]

  deps += [
    ":leveldb",
    ":private_headers",
  ]
}

template("leveldb_test") {
  executable("leveldb_${target_name}") {
    testonly = true

    visibility = []
    visibility = [ ":leveldb_tests" ]

    sources = invoker.sources

    include_dirs = [ "exported" ]

    configs += [
      ":flags",
      ":includes",
    ]

    deps += [
      ":leveldb",
      ":leveldb_test_utils",
      ":private_headers",
      "//src/third_party/snappy:snappy",
    ]
  }
}

leveldb_test("arena_test") {
  sources = [
    "exported/util/arena_test.cc",
  ]
}

leveldb_test("autocompact_test") {
  sources = [
    "exported/db/autocompact_test.cc",
  ]
}

leveldb_test("bloom_test") {
  sources = [
    "exported/util/bloom_test.cc",
  ]
}

leveldb_test("cache_test") {
  sources = [
    "exported/util/cache_test.cc",
  ]
}

leveldb_test("coding_test") {
  sources = [
    "exported/util/coding_test.cc",
  ]
}

leveldb_test("corruption_test") {
  sources = [
    "exported/db/corruption_test.cc",
  ]
}

leveldb_test("crc32c_test") {
  sources = [
    "exported/util/crc32c_test.cc",
  ]
}

leveldb_test("db_test") {
  sources = [
    "exported/db/db_test.cc",
  ]
}

leveldb_test("dbformat_test") {
  sources = [
    "exported/db/dbformat_test.cc",
  ]
}

leveldb_test("env_test") {
  sources = [
    "exported/util/env_test.cc",
  ]
}

leveldb_test("filename_test") {
  sources = [
    "exported/db/filename_test.cc",
  ]
}

leveldb_test("filter_block_test") {
  sources = [
    "exported/table/filter_block_test.cc",
  ]
}

leveldb_test("hash_test") {
  sources = [
    "exported/util/hash_test.cc",
  ]
}

leveldb_test("issue178_test") {
  sources = [
    "exported/issues/issue178_test.cc",
  ]
}

leveldb_test("issue200_test") {
  sources = [
    "exported/issues/issue200_test.cc",
  ]
}

leveldb_test("log_test") {
  sources = [
    "exported/db/log_test.cc",
  ]
}

leveldb_test("memenv_test") {
  sources = [
    "exported/helpers/memenv/memenv_test.cc",
  ]
}

leveldb_test("skiplist_test") {
  sources = [
    "exported/db/skiplist_test.cc",
  ]
}

leveldb_test("table_test") {
  sources = [
    "exported/table/table_test.cc",
  ]
}

leveldb_test("version_edit_test") {
  sources = [
    "exported/db/version_edit_test.cc",
  ]
}

leveldb_test("version_set_test") {
  sources = [
    "exported/db/version_set_test.cc",
  ]
}

leveldb_test("write_batch_test") {
  sources = [
    "exported/db/write_batch_test.cc",
  ]
}

group("leveldb_tests") {
  testonly = true

  deps = [
    ":leveldb_arena_test",
    ":leveldb_autocompact_test",
    ":leveldb_bloom_test",
    ":leveldb_cache_test",
    ":leveldb_coding_test",
    ":leveldb_corruption_test",
    ":leveldb_crc32c_test",
    ":leveldb_db_test",
    ":leveldb_dbformat_test",
    ":leveldb_env_test",
    ":leveldb_filename_test",
    ":leveldb_filter_block_test",
    ":leveldb_hash_test",
    ":leveldb_issue178_test",
    ":leveldb_issue200_test",
    ":leveldb_log_test",
    ":leveldb_memenv_test",
    ":leveldb_skiplist_test",
    ":leveldb_table_test",
    ":leveldb_version_edit_test",
    ":leveldb_version_set_test",
    ":leveldb_write_batch_test",
  ]
}
